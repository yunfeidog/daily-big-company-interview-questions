const e=JSON.parse('{"key":"v-75224274","path":"/interviews/%E6%8B%BC%E5%A4%9A%E5%A4%9A/2024.04.27%E6%8B%BC%E5%A4%9A%E5%A4%9A%E4%BA%8C%E9%9D%A2.html","title":"2024.04.27拼多多二面","lang":"zh-CN","frontmatter":{"title":"2024.04.27拼多多二面","date":"2024-04-29T00:00:00.000Z","category":["拼多多","二面"],"description":"1.索引的数据结构 在MySQL中，索引主要采用B+树这种数据结构。B+Tree 是一种多叉树，叶子节点才存放数据，非叶子节点只存放索引，而且每个节点里的数据是按主键顺序存放的。每一层父节点的索引值都会出现在下层子节点的索引值中，因此在叶子节点中，包括了所有的索引值信息，并且每一个叶子节点都有两个指针，分别指向下一个叶子节点和上一个叶子节点，形成一个双...","head":[["meta",{"property":"og:url","content":"https://github.com/yunfeidog/daily-big-company-interview-questions/interviews/%E6%8B%BC%E5%A4%9A%E5%A4%9A/2024.04.27%E6%8B%BC%E5%A4%9A%E5%A4%9A%E4%BA%8C%E9%9D%A2.html"}],["meta",{"property":"og:site_name","content":"每日大厂面试题分享"}],["meta",{"property":"og:title","content":"2024.04.27拼多多二面"}],["meta",{"property":"og:description","content":"1.索引的数据结构 在MySQL中，索引主要采用B+树这种数据结构。B+Tree 是一种多叉树，叶子节点才存放数据，非叶子节点只存放索引，而且每个节点里的数据是按主键顺序存放的。每一层父节点的索引值都会出现在下层子节点的索引值中，因此在叶子节点中，包括了所有的索引值信息，并且每一个叶子节点都有两个指针，分别指向下一个叶子节点和上一个叶子节点，形成一个双..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2024-05-03T15:35:26.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2024-04-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-03T15:35:26.000Z"}]]},"excerpt":"","headers":[{"level":3,"title":"1.索引的数据结构","slug":"_1-索引的数据结构","link":"#_1-索引的数据结构","children":[]},{"level":3,"title":"2.为什么要用B+树？","slug":"_2-为什么要用b-树","link":"#_2-为什么要用b-树","children":[]},{"level":3,"title":"3.为什么B+树要比二叉树好","slug":"_3-为什么b-树要比二叉树好","link":"#_3-为什么b-树要比二叉树好","children":[]},{"level":3,"title":"4.什么是线程安全？","slug":"_4-什么是线程安全","link":"#_4-什么是线程安全","children":[]},{"level":3,"title":"5.哪些方法保证线程安全？","slug":"_5-哪些方法保证线程安全","link":"#_5-哪些方法保证线程安全","children":[]},{"level":3,"title":"6.乐观锁和悲观锁","slug":"_6-乐观锁和悲观锁","link":"#_6-乐观锁和悲观锁","children":[]},{"level":3,"title":"7.synchonized底层原理","slug":"_7-synchonized底层原理","link":"#_7-synchonized底层原理","children":[]},{"level":3,"title":"8.抢占锁的过程","slug":"_8-抢占锁的过程","link":"#_8-抢占锁的过程","children":[]},{"level":3,"title":"9.ReentrantLock的实现原理","slug":"_9-reentrantlock的实现原理","link":"#_9-reentrantlock的实现原理","children":[]},{"level":3,"title":"10.为什么用CAS","slug":"_10-为什么用cas","link":"#_10-为什么用cas","children":[]},{"level":3,"title":"11.为什么用Spring","slug":"_11-为什么用spring","link":"#_11-为什么用spring","children":[]},{"level":3,"title":"12.除了Spring还有其他的框架吗","slug":"_12-除了spring还有其他的框架吗","link":"#_12-除了spring还有其他的框架吗","children":[]},{"level":3,"title":"13.Spring MVC包括哪些流程？","slug":"_13-spring-mvc包括哪些流程","link":"#_13-spring-mvc包括哪些流程","children":[]},{"level":3,"title":"14.Spring boot是什么","slug":"_14-spring-boot是什么","link":"#_14-spring-boot是什么","children":[]},{"level":3,"title":"手撕：排序链表 时间复杂度，空间复杂度，为什么","slug":"手撕-排序链表-时间复杂度-空间复杂度-为什么","link":"#手撕-排序链表-时间复杂度-空间复杂度-为什么","children":[]}],"git":{"createdTime":1714370676000,"updatedTime":1714750526000,"contributors":[{"name":"yunfeidog","email":"1844025705@qq.com","commits":2}]},"readingTime":{"minutes":16.88,"words":5064},"filePathRelative":"interviews/拼多多/2024.04.27拼多多二面.md","localizedDate":"2024年4月29日"}');export{e as data};
