const e=JSON.parse('{"key":"v-5069b66c","path":"/interviews/%E7%BE%8E%E5%9B%A2/2024.04.28%E7%BE%8E%E5%9B%A2%E5%90%8E%E7%AB%AF%E6%97%A5%E5%B8%B8%E4%B8%80%E9%9D%A2.html","title":"2024.04.28美团后端日常一面","lang":"zh-CN","frontmatter":{"title":"2024.04.28美团后端日常一面","date":"2024-05-01T00:00:00.000Z","category":["美团","一面"],"description":"1、HashMap 原理、为什么线程不安全、红黑树的结构 1. HashMap原理: HashMap使用哈希表实现,其中包含一个Entry数组(桶数组)作为数据存储结构。; 当向HashMap中添加一个Key-Value对时,会根据Key的哈希码计算出数组索引,然后将Key-Value对添加到对应索引的链表中。; HashMap通过拉链法解决哈希冲突,...","head":[["meta",{"property":"og:url","content":"https://github.com/yunfeidog/daily-big-company-interview-questions/interviews/%E7%BE%8E%E5%9B%A2/2024.04.28%E7%BE%8E%E5%9B%A2%E5%90%8E%E7%AB%AF%E6%97%A5%E5%B8%B8%E4%B8%80%E9%9D%A2.html"}],["meta",{"property":"og:site_name","content":"每日大厂面试题分享"}],["meta",{"property":"og:title","content":"2024.04.28美团后端日常一面"}],["meta",{"property":"og:description","content":"1、HashMap 原理、为什么线程不安全、红黑树的结构 1. HashMap原理: HashMap使用哈希表实现,其中包含一个Entry数组(桶数组)作为数据存储结构。; 当向HashMap中添加一个Key-Value对时,会根据Key的哈希码计算出数组索引,然后将Key-Value对添加到对应索引的链表中。; HashMap通过拉链法解决哈希冲突,..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2024-05-03T15:35:26.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2024-05-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-03T15:35:26.000Z"}]]},"excerpt":"","headers":[{"level":3,"title":"1、HashMap 原理、为什么线程不安全、红黑树的结构","slug":"_1、hashmap-原理、为什么线程不安全、红黑树的结构","link":"#_1、hashmap-原理、为什么线程不安全、红黑树的结构","children":[]},{"level":3,"title":"2、ConcurrentHashMap 怎么保证线程安全、1.8 版本做了什么优化、为什么把 ReentrantLock 改成了 CAS + synchronized","slug":"_2、concurrenthashmap-怎么保证线程安全、1-8-版本做了什么优化、为什么把-reentrantlock-改成了-cas-synchronized","link":"#_2、concurrenthashmap-怎么保证线程安全、1-8-版本做了什么优化、为什么把-reentrantlock-改成了-cas-synchronized","children":[]},{"level":3,"title":"3、hashcode 和 equals，只重写一个会有什么问题","slug":"_3、hashcode-和-equals-只重写一个会有什么问题","link":"#_3、hashcode-和-equals-只重写一个会有什么问题","children":[]},{"level":3,"title":"4、最左匹配原则","slug":"_4、最左匹配原则","link":"#_4、最左匹配原则","children":[]},{"level":3,"title":"5、为什么用 B+ 树作为索引","slug":"_5、为什么用-b-树作为索引","link":"#_5、为什么用-b-树作为索引","children":[]},{"level":3,"title":"6、事务隔离级别、可重复读解决了什么问题","slug":"_6、事务隔离级别、可重复读解决了什么问题","link":"#_6、事务隔离级别、可重复读解决了什么问题","children":[]},{"level":3,"title":"7、MySQL 实现的可重复读怎么解决脏读和不可重复读问题","slug":"_7、mysql-实现的可重复读怎么解决脏读和不可重复读问题","link":"#_7、mysql-实现的可重复读怎么解决脏读和不可重复读问题","children":[]},{"level":3,"title":"8、JVM 内存结构","slug":"_8、jvm-内存结构","link":"#_8、jvm-内存结构","children":[]},{"level":3,"title":"9、Redis 常用数据类型","slug":"_9、redis-常用数据类型","link":"#_9、redis-常用数据类型","children":[]},{"level":3,"title":"10、Redis 实现分布式锁","slug":"_10、redis-实现分布式锁","link":"#_10、redis-实现分布式锁","children":[]},{"level":3,"title":"11、缓存穿透、缓存雪崩、缓存击穿","slug":"_11、缓存穿透、缓存雪崩、缓存击穿","link":"#_11、缓存穿透、缓存雪崩、缓存击穿","children":[]},{"level":3,"title":"12、缓存空值和布隆过滤器的区别、优缺点","slug":"_12、缓存空值和布隆过滤器的区别、优缺点","link":"#_12、缓存空值和布隆过滤器的区别、优缺点","children":[]},{"level":3,"title":"13、用过什么 mq、RocketMQ 的结构","slug":"_13、用过什么-mq、rocketmq-的结构","link":"#_13、用过什么-mq、rocketmq-的结构","children":[]},{"level":3,"title":"14、怎么保证不重复消费、消费失败了怎么办","slug":"_14、怎么保证不重复消费、消费失败了怎么办","link":"#_14、怎么保证不重复消费、消费失败了怎么办","children":[]},{"level":3,"title":"15、简单聊项目","slug":"_15、简单聊项目","link":"#_15、简单聊项目","children":[]},{"level":3,"title":"16、LC143 重排链表","slug":"_16、lc143-重排链表","link":"#_16、lc143-重排链表","children":[]}],"git":{"createdTime":1714560702000,"updatedTime":1714750526000,"contributors":[{"name":"yunfeidog","email":"1844025705@qq.com","commits":2}]},"readingTime":{"minutes":14.15,"words":4245},"filePathRelative":"interviews/美团/2024.04.28美团后端日常一面.md","localizedDate":"2024年5月1日"}');export{e as data};
